//=============================================================================
//
// アニメーション処理 [base_anime.cpp]
// Author : 
//
//=============================================================================
#include "base_anime.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//=============================================================================
// 引数付きコンストラクタ
//=============================================================================
Base_Anime::Base_Anime(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 scl, D3DXVECTOR3 vel, D3DXCOLOR color)
	:Base_Object(anime, pos, rot, scl, vel, color, true)
{
}

//=============================================================================
// 衝突判定ディスパッチ
//=============================================================================
void Base_Anime::CollDispatch(Base_Object* pObj)
{
}

//=============================================================================
// アニメーション
//=============================================================================
void Base_Anime::Animetion(void)
{
	++m_Frame;

	if (m_Frame == m_KeyFrame.front()) {
		if (m_KeyFrame.size() > 1) {
			m_Uv.m_Uv_v.x += m_Uv.m_Uv_f.x;
			m_KeyFrame.pop_front();
		}
		else {
			SetUse(false);
		}
	}
}

//=============================================================================
// セッター
//=============================================================================
void Base_Anime::SetKeyFrame(std::initializer_list<int> list)
{
	for (int num : list)
	{
		m_KeyFrame.push_back(num);
	}
}
